Demo: taylor_map_demo.ipynb
Execution Time: 0.82 seconds
Return Code: 0
Timestamp: 2025-09-01 01:53:37
==================================================
STDOUT:
Initializing MTF globals with: _MAX_ORDER=4, _MAX_DIMENSION=2
Loading/Precomputing Taylor coefficients up to order 4
Global precomputed coefficients loading/generation complete.
Size of precomputed_coefficients dictionary in memory: 464 bytes, 0.45 KB, 0.00 MB
MTF globals initialized: _MAX_ORDER=4, _MAX_DIMENSION=2, _INITIALIZED=True
Max coefficient count (order=4, nvars=2): 15
Precomputed coefficients loaded and ready for use.
TaylorMap with 2 components (input dim: 2):
--- Component 1 ---
          Coefficient  Order Exponents
0  1.000000000000e+00      1    (1, 0)
1 -1.666666666667e-01      3    (3, 0)

--- Component 2 ---
          Coefficient  Order Exponents
0  1.000000000000e+00      0    (0, 0)
1 -5.000000000000e-01      2    (0, 2)
2  4.166666666667e-02      4    (0, 4)


TaylorMap with 2 components (input dim: 2):
--- Component 1 ---
         Coefficient  Order Exponents
0 1.000000000000e+00      1    (1, 0)
1 1.000000000000e+00      1    (0, 1)

--- Component 2 ---
          Coefficient  Order Exponents
0  1.000000000000e+00      1    (1, 0)
1 -1.000000000000e+00      1    (0, 1)


TaylorMap with 2 components (input dim: 2):
--- Component 1 ---
          Coefficient  Order Exponents
0  2.000000000000e+00      1    (1, 0)
1  1.000000000000e+00      1    (0, 1)
2 -1.666666666667e-01      3    (3, 0)

--- Component 2 ---
          Coefficient  Order Exponents
0  1.000000000000e+00      0    (0, 0)
1  1.000000000000e+00      1    (1, 0)
2 -1.000000000000e+00      1    (0, 1)
3 -5.000000000000e-01      2    (0, 2)
4  4.166666666667e-02      4    (0, 4)


TaylorMap with 2 components (input dim: 2):
--- Component 1 ---
          Coefficient  Order Exponents
0  1.000000000000e+00      1    (1, 0)
1  1.000000000000e+00      1    (0, 1)
2 -1.666666666667e-01      3    (3, 0)
3 -5.000000000000e-01      3    (2, 1)
4 -5.000000000000e-01      3    (1, 2)
5 -1.666666666667e-01      3    (0, 3)

--- Component 2 ---
          Coefficient  Order Exponents
0  1.000000000000e+00      0    (0, 0)
1 -5.000000000000e-01      2    (2, 0)
2  1.000000000000e+00      2    (1, 1)
3 -5.000000000000e-01      2    (0, 2)
4  4.166666666667e-02      4    (4, 0)
5 -1.666666666667e-01      4    (3, 1)
6  2.500000000000e-01      4    (2, 2)
7 -1.666666666667e-01      4    (1, 3)
8  4.166666666667e-02      4    (0, 4)


Trace of F at (0,0): (1+0j)
F(G(0.5, 0.2)) from TaylorMap: [0.64283333 0.9553375 ]
NumPy equivalent for comparison: [np.float64(0.644217687237691), np.float64(0.955336489125606)]
--- Original Map to Invert ---
TaylorMap with 2 components (input dim: 2):
--- Component 1 ---
         Coefficient  Order Exponents
0 1.000000000000e+00      1    (1, 0)
1 1.000000000000e-01      2    (0, 2)

--- Component 2 ---
          Coefficient  Order Exponents
0  1.000000000000e+00      1    (0, 1)
1 -1.000000000000e-01      2    (2, 0)



--- Inverted Map ---
TaylorMap with 2 components (input dim: 2):
--- Component 1 ---
          Coefficient  Order Exponents
0  1.000000000000e+00      1    (1, 0)
1 -1.000000000000e-01      2    (0, 2)
2 -2.000000000000e-02      3    (2, 1)
3 -1.000000000000e-03      4    (4, 0)
4  4.000000000000e-03      4    (1, 3)

--- Component 2 ---
          Coefficient  Order Exponents
0  1.000000000000e+00      1    (0, 1)
1  1.000000000000e-01      2    (2, 0)
2 -2.000000000000e-02      3    (1, 2)
3 -4.000000000000e-03      4    (3, 1)
4  1.000000000000e-03      4    (0, 4)



--- Composition of F_inv o F ---
TaylorMap with 2 components (input dim: 2):
--- Component 1 ---
         Coefficient  Order Exponents
0 1.000000000000e+00      1    (1, 0)

--- Component 2 ---
         Coefficient  Order Exponents
0 1.000000000000e+00      1    (0, 1)



(Result should be close to the identity map [x, y])

==================================================
STDERR:
/home/manikonda/work/MTFLibrary/src/mtflib/taylor_map.py:283: ComplexWarning: Casting complex values to real discards the imaginary part
  comp_mtf += float(inv_jacobian[i, j]) * var_mtf
